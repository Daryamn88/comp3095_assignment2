spring:
  application:
    name: course-service

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/GBC_Realm/protocol/openid-connect/certs
          issuer-uri: http://keycloak:8080/realms/GBC_Realm
      client:
        registration:
          keycloak:
            client-id: course-service
            client-secret: course-service-secret
            authorization-grant-type: client_credentials
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/GBC_Realm

  datasource:
    url: jdbc:postgresql://localhost:5432/course_db
    username: course_user
    password: course_password
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms

  cache:
    type: redis
    redis:
      time-to-live: 600000

server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
    lease-renewal-interval-in-seconds: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
  show-actuator: false

logging:
  level:
    com.academicplanner.courseservice: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.security: DEBUG
    org.springframework.cloud.netflix.eureka: INFO